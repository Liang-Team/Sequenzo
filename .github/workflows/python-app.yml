# GitHub Actions workflow for Sequenzo package
name: Sequenzo Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Windows 处理 numpy 版本冲突
    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        pip install numpy==1.22.4 --only-binary numpy  # 限制 numpy 版本，防止安装 numpy 2.x
        pip install wheel setuptools cmake
        pip install -r requirements-${{ matrix.python-version }}.txt --use-deprecated=legacy-resolver

    # macOS 处理 numpy 编译问题
    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        python -m pip install --upgrade pip
        pip install numpy --only-binary numpy  # 避免 macOS `faltivec` 相关编译错误
        pip install wheel setuptools
        pip install -r requirements-${{ matrix.python-version }}.txt --use-deprecated=legacy-resolver

    # Linux 默认安装
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install -r requirements-${{ matrix.python-version }}.txt --use-deprecated=legacy-resolver

    # 安装本地包（避免 Windows 的 UTF-8 编码问题）
    - name: Install local package
      run: |
        pip install -v -e .
      env:
        PYTHONUTF8: 1  # 强制 Python 使用 UTF-8，避免 Windows `UnicodeDecodeError`
        PYTHONPATH: ${{ github.workspace }}

    # Debugging imports
    - name: Show detailed import information
      run: |
        python -m pip install -v -e .
        python -c "import sys; print(sys.path)"
        python -c "import importlib; print(importlib.import_module('sequenzo'))"
        python -c "import sequenzo; print(dir(sequenzo))"

    # 显示已安装的包
    - name: Show installed packages
      run: |
        pip list

    # 测试包是否正确安装
    - name: Test imports
      run: |
        python -c "import sequenzo; print(f'Sequenzo version: {sequenzo.__version__}')"
        python -c "import sequenzo.dissimilarity_measures; print('Dissimilarity measures module imported successfully')"
        python -c "import sequenzo.clustering; print('Clustering module imported successfully')"
      env:
        PYTHONPATH: ${{ github.workspace }}

    # 构建 wheel
    - name: Build wheel
      run: |
        python setup.py bdist_wheel

    # 上传构建产物
    - name: Upload wheel
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/*.whl
