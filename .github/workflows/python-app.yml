# GitHub Actions workflow for Sequenzo package
name: Sequenzo Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Installing platform-specific dependencies
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3-dev cmake

    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake

    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install pybind11 numpy 
        pip install flake8 pytest pytest-cov
        pip install pandas matplotlib seaborn pillow

    # Document the compiling process in details
    - name: Build package
      run: |
        python -m pip install -v -e .  

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test imports
      run: |
        python -c "import sequenzo; print(f'Sequenzo version: {sequenzo.__version__}')"
        python -c "import sequenzo.dissimilarity_measures; print('Dissimilarity measures module imported successfully')"
        python -c "import sequenzo.clustering; print('Clustering module imported successfully')"

    - name: Build wheel
      run: |
        python setup.py bdist_wheel

    - name: Upload wheel
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/*.whl

    # For potential debugging purposes
    - name: Display system and build information
      run: |
        python --version
        pip --version
        cmake --version
        python -c "import sys; print(f'Platform: {sys.platform}')"
        python -c "import pybind11; print(f'pybind11 version: {pybind11.__version__}')"