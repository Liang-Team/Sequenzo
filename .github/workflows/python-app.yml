# GitHub Actions workflow for Sequenzo package
name: Sequenzo Package CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # 清理 `pip` 缓存，防止冲突
    - name: Clear pip cache
      run: python -m pip cache purge

    # macOS: 处理 numpy & fastcluster 版本冲突，提前安装 Cython
    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        python -m pip install --upgrade pip
        if [[ "${{ matrix.python-version }}" == "3.11" ]]; then
          pip install "numpy>=1.23.2,<2.0"  
        else
          pip install numpy==1.22.4 --only-binary numpy
        fi
        pip install wheel setuptools Cython  
        pip install fastcluster==1.2.6  
        pip install -r requirements-${{ matrix.python-version }}.txt --no-build-isolation

    # pip install "numpy>=1.23.2,<2.0"  # ✅ 3.11 允许更高的 numpy 版本
    # pip install wheel setuptools Cython  # ✅ 先安装 Cython 避免 pandas 构建失败
    # pip install fastcluster==1.2.6  # ✅ 解决 fastcluster 版本问题

    # Windows: 处理 numpy & fastcluster 版本问题，安装完整的 MSVC 工具链
    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install visualstudio2022buildtools --version=17.0.0 -y
        choco install visualstudio2022-workload-vctools -y
        python -m pip install --upgrade pip
        if [[ "${{ matrix.python-version }}" == "3.11" ]]; then
          pip install "numpy>=1.23.2,<2.0"  
        else
          pip install numpy==1.22.4 --only-binary numpy
        fi
        pip install wheel setuptools cmake Cython  
        pip install --force-reinstall fastcluster==1.2.6  
        pip install -r requirements-${{ matrix.python-version }}.txt --use-deprecated=legacy-resolver

    # pip install "numpy>=1.23.2,<2.0"  # ✅ 3.11 允许更高的 numpy 版本
    # pip install wheel setuptools cmake Cython  # ✅ 先安装 Cython 解决 pandas 问题
    # pip install --force-reinstall fastcluster==1.2.6  # ✅ 强制安装 fastcluster 1.2.6，避免版本冲突

    # Linux: 处理 fastcluster 版本问题，确保 numpy 先安装
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install numpy --only-binary numpy  
        pip install fastcluster==1.2.6  
        pip install -r requirements-${{ matrix.python-version }}.txt --no-build-isolation
    # pip install numpy --only-binary numpy  # ✅ 先安装 numpy
    # pip install fastcluster==1.2.6  # ✅ 避免 fastcluster 版本问题

    # 确保 `PYTHONPATH` 正确
    - name: Verify package path
      shell: bash
      run: |
        echo "📂 Current directory:"
        ls -lah
        echo "📂 Sequenzo package directory:"
        ls -lah sequenzo || echo "⚠️ Directory 'sequenzo' not found!"

    # Windows: 解决 Unicode 编码问题
    - name: Set Windows Encoding
      if: runner.os == 'Windows'
      run: chcp 65001

    # 安装本地包
    - name: Install local package
      run: |
        pip install --no-cache-dir -e .
      env:
        PYTHONUTF8: 1  # ✅ 强制 UTF-8（避免 Windows `UnicodeDecodeError`）
        PYTHONPATH: ${{ github.workspace }}

    # Debugging imports
    - name: Show detailed import information
      run: |
        python -c "import sys; print(sys.path)"
        python -c "import importlib; print(importlib.import_module('sequenzo'))"
        python -c "import sequenzo; print(dir(sequenzo))"

    # 显示已安装的包
    - name: Show installed packages
      run: pip list

    # 测试模块是否正确安装
    - name: Test imports
      run: |
        python -c "import sequenzo.dissimilarity_measures; print('Dissimilarity measures module imported successfully')"
        python -c "import sequenzo.clustering; print('Clustering module imported successfully')"
      env:
        PYTHONPATH: ${{ github.workspace }}

    # 构建 wheel
    - name: Build wheel
      run: python setup.py bdist_wheel

    # 上传构建产物
    - name: Upload wheel
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/*.whl
