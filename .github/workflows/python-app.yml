# GitHub Actions workflow for Sequenzo package
# 打包 wheel（.whl）
# 支持三大平台：
# Linux (manylinux) → 用 cibuildwheel
# macOS (universal2) → 用 build_ext + build
# Windows → 用 cibuildwheel

name: Build Wheels for Sequenzo

on:
  push:
    tags:
      - "v*"  # 比如 v0.1.0
  workflow_dispatch:  # 支持手动触发

jobs:
  build:
    name: Build ${{ matrix.os }} Py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Cython pybind11 numpy build cibuildwheel twine

      - name: Build extensions (cythonize)
        run: python setup.py build_ext --inplace

      # CIBW_SKIP: "pp*" 表示跳过所有 PyPy 构建（如 pp39-*, pp310-* 等）。
      # 我们的项目里有大量的 Cython 模块、.cpp / .pyx 扩展、pybind11 接口
      # 这些都是 为 CPython 编译的本地扩展，PyPy 对它们支持很不完善，编译也会失败
      - name: Build wheels (platform-specific)
        run: |
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            python setup.py build_ext --inplace
            python -m build
          else
            python -m cibuildwheel --output-dir dist
        shell: bash
        env:
          CIBW_SKIP: "pp*"

      - name: Check wheels
        run: twine check dist/*

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/
